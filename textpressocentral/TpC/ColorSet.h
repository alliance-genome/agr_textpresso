/**
    Project: textpressocentral
    File name: ColorSet.h
    
    @author valerio
    @version 1.0 5/30/17.
*/

#ifndef TEXTPRESSOCENTRAL_COLORSET_H
#define TEXTPRESSOCENTRAL_COLORSET_H


#include <vector>
#include <Wt/WColor>
#include <Wt/WSignal>
#include "Preference.h"
#include "TextpressoCentralGlobalDefinitions.h"

namespace colors{

    static const int numColorsPerType = 10;
    static const int numColorTypes = 3;

    enum class ColorComponent {
        RED = 0,
        GREEN = 1,
        BLUE = 2
    };

    class ColorSet {
    public:
        // no destructors. No move nor copy constructors. No copy assignement operators -> all these methods are
        // automatically generated by the compiler
        ColorSet():
                keywordColors(),
                categoryColorVec(),
                categoryBgColorVec(),
                colorsChangedSignal() {};
        inline Wt::Signal<int>& signalColorsChanged() {
            return colorsChangedSignal;
        }
        Wt::WColor getKeywordColor(std::vector<Wt::WColor>::size_type);
        Wt::WColor getCategoryColor(std::vector<Wt::WColor>::size_type);
        Wt::WColor getCategoryBgColor(std::vector<Wt::WColor>::size_type);
        void setKeywordColor(const Wt::WColor&, std::vector<Wt::WColor>::size_type);
        void setCategoryColor(const Wt::WColor&, std::vector<Wt::WColor>::size_type);
        void setCategoryBgColor(const Wt::WColor&, std::vector<Wt::WColor>::size_type);
        void loadColorsFromDB(const std::string &);
        void saveColorsToDB(const std::string&);
    private:
        std::vector<Wt::WColor> keywordColors;
        std::vector<Wt::WColor> categoryColorVec;
        std::vector<Wt::WColor> categoryBgColorVec;

        Wt::Signal<int> colorsChangedSignal;

        void setDefaultColors();
        Wt::WColor getColorFromVec(std::vector<Wt::WColor> vec, unsigned long i);
    };

    std::string getRGBStringFromWColor(const Wt::WColor&);
    int getIntFromRGBString(const std::string&, ColorComponent);
    Wt::WColor getWColorFromRGBString(const std::string&);
}

#endif //TEXTPRESSOCENTRAL_COLORSET_H
